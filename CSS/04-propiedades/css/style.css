

/* PARA BACKGROUND */
.container{
    width: 70%;
    height: 300px;
    margin: 30px auto;
    background: purple;

    /*background: blue url(../img/marvel.jpg) no-repeat fixed center; */ 

    /*background-image: url(../img/marvel.jpg), url(../img/wall-e.jpg); Esto me permite poner 2 imagenes en un mismo div*/

    background-image: url(../img/sunflower-cover.jpg);/*Inserta una imagen pero se repite varias veces, E incluso podemos agregar otra imagen*/

    background-repeat: no-repeat; /*Esto hace que la imagen que pusios NO SE REPITA*/
    /*background-position: top bottom right left; /* Los dos primeros valores pertencen al eje vertical Y los otros dos pertenecen al eje Horizontal*/

    /*background-position: top 10px right 50px;*/

    background-position: center; /*Centra la imagen en el espacio*/

    /*background-size: 30px 20px; /* ancho y alto*/
    
    /*background-size: contain; /*Escala la imagen lo mas posible, sin estirar*/

    /*background-size: cover;/* esto cubre el 100 del contenedor, sin estirar la imagen*/

    background-size: 100% 110%; /* rellena el espacio con la imagen al 100% de ancho y alto pero se ve como mal ajustada, lo mejor es bucar una imagen con aproxamadamente esa forma o buscar una imagen para Frame */


}

.atachment{
    width: 100%;
    height: 100vh;/* Representa el 100% de la altura de la ventana grafica, ayuda al responsive */
    background-image: url(../img/street.jpg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;

    background-attachment: fixed; /* El fondo del elemento se queda fijo e interpreta que va a usar el 100% de ancho y alto de este fondo */

}

.degradado{
    width: 80%;
    height: 400px;
    margin: 30px auto;
    background: steelblue;

    /* background-image: linear-gradient(direction, color stop, color stop); */
    /* Crimson 30% que su transicion de degradado acabe en el 30% */
    
    background-image: linear-gradient(to top, red, pink);
    background-image: linear-gradient(Crimson 30%, steelblue 80%);

}

.header{
    
    padding: 0.1px;
    height: 650px;
    background: rgb(2,0,36);
    background-image: linear-gradient(90deg, rgb(108, 103, 202) 0%, rgba(24, 238, 184, 0.281) 35%, rgb(10, 135, 160) 100%), url(../img/wall-e.jpg);
    
    
    /*
    Para ponerle un degradado transparenet a la imagin podriamos poner...
    +cssgradient.io
    +webgradients.com
    +uigradients.com
    */
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}




/* ------MARING------- */

/*BOX MODEL padding*/



.box1{
    background: rgba(0, 255, 191, 0.744);
    border: 1px solid black;

    /*Podriamos usar los margenes de esta manera*/
    /*
    margin-top: 50px;
    margin-bottom: 30px;
    margin-right: 24px;
    margin-left: 25px;
    */
    /* Tambien podrias usar el margin en una sola linea, tomando en cuenta que los datos debemos colocarlo en el sentido de las agujas del reloj, por ejemplo
    
    margin: top right bottom left;
    
    margin: 50px 24px 30px 25px;
    */

    /* margin: 40px 80px; Tambien se puede usar de esta manera, tomando en cuenta que la primera cantidad que es 40px; es para Arriba y abajo y los 80px son para Izquierda y Derecha*/

    /* margin: 40px 0 80px 40px; Tambien se puede de esta manera */

    /* margin: 40px 50px 80px;  En esta parte, el  valor de la izquierda tomara el mismo valor de la derecha */

    margin-bottom: 0 auto; /* lo que hace es basicamente centrar el cuadro, pero antes se le tiene que dar un ancho para que la palabra auto pueda aplicarse.*/

}

/* CUANDO TOCAN LOS MARGENES SOLO SE TOMA EL VALOR DEL MAYOR MARGEN.
Por ejemplo: si una caja que esta primero tiene un marin-botton: 50px
y la segunda caja que se encuentra abajo de esta tiene un margin-top: 30px entonces 
ahi chocarian los margenes y se toma el que tiene mas valor*/

/*Un elemento hijo  puede hecer colapso de margen con su padre y para separarlo del padre
se podria colocando un PADDING*/

/*El padding en una caja, esos pixeles se agregarian a la dimension de la caja 
si no quiero ese comportamiento y quiero que la caja tenga un mismo tamaño
se coloca esta propiedad BOX-SIZING: Border-box*/

.box2{
    
    padding: 20px;
    /* padding: top right bottom left*/
    background: rgb(179, 0, 255);
    margin-top: 30px;
    margin-left: 20px;
    overflow: hidden; /*Todo lo que se desborda o se pasa del cuadro, lo oculta*/
    border: 2px solid greenyellow;
    box-sizing: border-box; /* Esto sirve para que el tamaño del cuadro sea igual que el anterior, o que no cambie de tamaño debia al padding, entonces para evitar eso, se usa este codigo BOX-SIZING: border-box*/

    box-sizing: content-box; /*Esto sirve para que el cuadro regrese como antes, osea que sea mas grande por las modificaciones que tiene*/
}

.box {
    background: cadetblue;
    width: 200px;
    height: 200px;
    margin: 0 auto;
    margin-top: 40px;

    /*---- BORDER ----*/
    /* border: widht style color */
    /* border: 10px dashed brown */

    /* border-width: top right bottom left */
    /* border-style: top right bottom left */
    /* border-color: top right bottom left */

    /*
    border-top: 10px solid green;
    border-right: 5px dashed yellow;
    border-bottom: 8px double black;
    border-left: 8px dotted white;
    */

    /* https://developer.mozilla.org/es/docs/Web/CSS/border-style */

    border-top-width: 20px;
    border-top-style: double;
    border-top-color: turquoise;

    border-right-width: 15px;
    border-right-style: dashed;
    border-right-color: beige;
    
    border-bottom-width: 25px;
    border-bottom-style: solid;
    border-bottom-color: deeppink;

    border-left-width: 25px;
    border-left-style: ridge;
    border-left-color: gold;

}

.img{
    display: block;
    width: 200px;
    height: 200px;
    object-fit: cover; /* Adapta la imagen para que se vea bien */
    margin: 20px auto;
    /*border-radius: 50%; /* Redondea la imagen, siempre y cuando tengan las mismas dimensiones */
    border-top-left-radius: 50%;
    border-top-right-radius: 20%;
    border-bottom-right-radius: 30%;
    border-bottom-left-radius: 100%;
}